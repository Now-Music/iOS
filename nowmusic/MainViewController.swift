import CoreLocation
import UIKit
import AVFoundation
import Photos

class MainViewController: UIViewController {
    
    @IBOutlet weak var restButton: UIButton!
    @IBOutlet weak var exerciseButton: UIButton!
    @IBOutlet weak var studyButton: UIButton!
    @IBOutlet weak var travelButton: UIButton!
    @IBOutlet weak var convertedLocationLabel: UILabel!
    @IBOutlet weak var weatherLabel: UILabel!
    
    @IBOutlet weak var previewView: PreviewView!
    var restCheck:Bool = false
    var exerciseCheck:Bool = false
    var studyCheck:Bool = false
    var travelCheck:Bool = false
    
    var id:String = ""
    var password:String = ""
    
    var pictureBase64:String=""
    
    var locationManager:CLLocationManager?
    var currentLocation:CLLocationCoordinate2D!
    var latitude:Double?
    var longitude:Double?
    
    
    
    let captureSession = AVCaptureSession()
    var videoDeviceInput:AVCaptureDeviceInput!
    let photoOutput = AVCapturePhotoOutput()
    
    let sessionQueue = DispatchQueue(label: "session Queue")
    let videoDeviceDiscoverySession = AVCaptureDevice.DiscoverySession(
        deviceTypes: [.builtInDualCamera, .builtInTripleCamera, .builtInWideAngleCamera, .builtInTrueDepthCamera],
        mediaType: .video,
        position: .unspecified
    )
    // 주기를 위해
    var timer:DispatchSourceTimer?
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.initialUI()
        self.requestAuthorization()
        
//        pictureBase64 = self.getBase64()
        previewView.session = captureSession
        sessionQueue.async {
            self.setupSession()
            self.startSession()
        }
    }
    
    @IBAction func tapTagButton(_ sender: UIButton) {
        if sender == self.restButton {
            self.restCheck = true
            self.exerciseCheck = false;
            self.studyCheck = false;
            self.travelCheck = false;
            self.restButton.alpha = 1
            self.exerciseButton.alpha = 0.3
            self.studyButton.alpha = 0.3
            self.travelButton.alpha = 0.3
            
        }
        if sender == self.exerciseButton {
            self.restCheck = false
            self.exerciseCheck = true;
            self.studyCheck = false;
            self.travelCheck = false;
            self.restButton.alpha = 0.3
            self.exerciseButton.alpha = 1
            self.studyButton.alpha = 0.3
            self.travelButton.alpha = 0.3
        }
        if sender == self.studyButton {
            self.restCheck = false
            self.exerciseCheck = false;
            self.studyCheck = true;
            self.travelCheck = false;
            self.restButton.alpha = 0.3
            self.exerciseButton.alpha = 0.3
            self.studyButton.alpha = 1
            self.travelButton.alpha = 0.3
        }
        if sender == self.travelButton {
            self.restCheck = false
            self.exerciseCheck = false;
            self.studyCheck = false;
            self.travelCheck = true;
            self.restButton.alpha = 0.3
            self.exerciseButton.alpha = 0.3
            self.studyButton.alpha = 0.3
            self.travelButton.alpha = 1
        }
        print(restCheck, exerciseCheck, studyCheck, travelCheck)
        self.weatherLabel.text = "로딩 중"
        capturePhoto()
    }
    @IBAction func cameraButtonTapped(_ sender: UIBarButtonItem) {
        self.capturePhoto()
    }
    private func initialUI(){
        self.tabBarController?.tabBar.isHidden = false
        
        self.restButton.layer.cornerRadius = 17
        self.exerciseButton.layer.cornerRadius = 17
        self.studyButton.layer.cornerRadius = 17
        self.travelButton.layer.cornerRadius = 17
        
        self.restButton.alpha =  0.3
        self.exerciseButton.alpha =  0.3
        self.studyButton.alpha =  0.3
        self.travelButton.alpha =  0.3
    }
}

extension MainViewController: CLLocationManagerDelegate{
    
    private func requestAuthorization(){
        if locationManager == nil{
            locationManager = CLLocationManager()
            locationManager?.delegate = self
            // 포 그라운드일때 위치 추적 권한 요청
            locationManager?.requestWhenInUseAuthorization() // 이게 locationManagerDidChangeAuthorization 의 역할까지 하는듯
            locationManager?.desiredAccuracy = kCLLocationAccuracyBest
            
        } else {
            locationManagerDidChangeAuthorization(locationManager!)
            locationManager?.startUpdatingLocation()
            
        }
    }
    func locationManagerDidChangeAuthorization(_ manager: CLLocationManager) {
        if manager.authorizationStatus == .authorizedWhenInUse {
            currentLocation = locationManager!.location?.coordinate
            LocationService.shared.longitude = currentLocation.longitude
            LocationService.shared.latitude = currentLocation.latitude
            print("---> locationManagerDidChangeAuthorization : ", LocationService.shared.longitude!, LocationService.shared.latitude!)
            if let lon = LocationService.shared.longitude, let lat = LocationService.shared.latitude {
                fetchToday(lat, lon)
                // 현재 위치 표시
                let findLocation = CLLocation(latitude: lat, longitude: lon)
                let geocoder = CLGeocoder()
                let locale = Locale(identifier: "Ko-kr") //원하는 언어의 나라 코드를 넣어주시면 됩니다.
                geocoder.reverseGeocodeLocation(findLocation, preferredLocale: locale, completionHandler: {(placemarks, error) in
                    if let address: [CLPlacemark] = placemarks {
                        // 주소를 String으로
                        let locationString = String("\(address.last!.administrativeArea!) \(address.last!.locality!) \(address.last!.thoroughfare!)")
                        print(locationString)
                        self.convertedLocationLabel.text = locationString
                    }
                })
            }
        }
    }
}
extension MainViewController{
    private var apiKey:String{
        get {
            guard let filePath = Bundle.main.path(forResource: "Property List", ofType: "plist")
            else { return "" }
            let plist = NSDictionary(contentsOfFile: filePath)
            //            print("plist : ",plist)
            guard let value = plist?.object(forKey: "OPENWEATHERMAP_KEY") as? String else { return "" }
            return value
        }
    }
    func fetchToday(_ lat:Double, _ lon:Double){
        let session = URLSession(configuration: URLSessionConfiguration.default)
        let url = URL(string: "https://api.openweathermap.org/data/2.5/onecall?lat=\(lat)&lon=\(lon)&exclude=minutely&appid=\(apiKey)&units=metric")
        //        print("->", url)
        let dataTask = session.dataTask(with: url!){(data, response, error) in
            guard error == nil else { return }
            guard let resultData = data else { return }
            
            let decoder = JSONDecoder()
            if let response = try? decoder.decode(TodayResponse.self, from: resultData){
                //                print("today : \(response)")
                print(response.current.weather[0].main)
                DispatchQueue.main.async{
                    self.weatherLabel.text = " \(response.current.weather[0].main)"
                }
                self.sendString(encodedString: response.current.weather[0].main) // send to Server
                
                
            }
            
            
        }
        dataTask.resume()
    }
    func sendString(encodedString : String){
        var stateString:String = ""
        
        
        if restCheck == true {
            stateString = "rest"
        } else if exerciseCheck == true {
            stateString = "exercise"
        } else if studyCheck == true {
            stateString = "study"
        } else{
            stateString = "travel"
        }
        let dic:Dictionary = ["user_id": "yoonjong", "weather" : encodedString, "month": "4", "state" : stateString, "picture_base64" : pictureBase64]
        print("--> dic : ", dic["user_id"], dic["weather"], dic["state"], dic["month"])
        
        
        guard let url = URL(string: "http://192.168.0.11:8080/client") else {
            return
        }
        var request = URLRequest(url:url)
        request.httpMethod = "POST"
        
        do {
            request.httpBody = try JSONSerialization.data(withJSONObject: dic, options: .prettyPrinted)
        } catch { print(error.localizedDescription) }
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")
        request.addValue("application/json", forHTTPHeaderField: "Accept-Type")
        
        // URLSession으로 데이터를 서버에 전송
        print("URLSession 진입")
        let session = URLSession.shared
        session.dataTask(with: request, completionHandler: {(data, response, error) in
            print("Main VC에서 전송완료")
        }).resume()
    }
}
extension MainViewController:AVCapturePhotoCaptureDelegate{ // camera 관련 세팅
    
    func setupSession(){
        // session에 대한 프리셋을 포토로 설정할 것
        captureSession.sessionPreset = .photo // 해상도 나름 높음
        captureSession.beginConfiguration() // 시작 !
        
        
        guard let camera = videoDeviceDiscoverySession.devices.first else {// 찾은 게 있으면 첫번째꺼 가져옴
            captureSession.commitConfiguration() // 찾는게 없으면 종료.
            return
        }
        
        do {
            let videoDeviceInput = try AVCaptureDeviceInput(device: camera) // Device Input 만들기.
            if captureSession.canAddInput(videoDeviceInput) {
                captureSession.addInput(videoDeviceInput)
                self.videoDeviceInput = videoDeviceInput
                // 실행하면 전면 카메라로 자동으로 전환
                let currentVideoDevice = self.videoDeviceInput.device
                let currentPosition = currentVideoDevice.position
                let isFront = currentPosition == .front
                if !isFront {
                    switchCamera()
                }
            } else {
                captureSession.commitConfiguration()
                return
            }
        } catch let error {
            captureSession.commitConfiguration()
            return
        }
        
        
        photoOutput.setPreparedPhotoSettingsArray(
            [AVCapturePhotoSettings(format: [AVVideoCodecKey: AVVideoCodecType.jpeg])], // 어떤 세팅으로 사진을 저장할 것인지에 대해 미리 설정할 수 있음.
            completionHandler: nil
        )
        
        if captureSession.canAddOutput(photoOutput){
            captureSession.addOutput(photoOutput)
        } else {
            captureSession.commitConfiguration()
            return // 볼일 없으니 탈출
        }
        
        captureSession.commitConfiguration()
    }
    func startSession(){
        sessionQueue.async {
            if !self.captureSession.isRunning{ // 중지중일 때만 가동해라.
                self.captureSession.startRunning()
            }
        }
    }
    func stopSession(){
        sessionQueue.async{
            if self.captureSession.isRunning{ // 진행중일때만 멈춰라
                self.captureSession.stopRunning()
            }
        }
    }
    
    func switchCamera(){
        guard videoDeviceDiscoverySession.devices.count > 1 else { return }
        
        sessionQueue.async {
            let currentVideoDevice = self.videoDeviceInput.device
            let currentPosition = currentVideoDevice.position
            let isFront = currentPosition == .front
            let preferredPosition:AVCaptureDevice.Position = isFront ? .back : .front
            let devices = self.videoDeviceDiscoverySession.devices
            var newVideoDevice:AVCaptureDevice?
            newVideoDevice = devices.first(where: {device in
                return preferredPosition == device.position
            })
            
            // update capture session
            if let newDevice = newVideoDevice {
                do {
                    let videoDeviceInput = try AVCaptureDeviceInput(device: newDevice)
                    self.captureSession.beginConfiguration()
                    self.captureSession.removeInput(self.videoDeviceInput)
                    
                    // add new device input
                    if self.captureSession.canAddInput(videoDeviceInput){
                        self.captureSession.addInput(videoDeviceInput)
                        self.videoDeviceInput = videoDeviceInput
                    } else {
                        self.captureSession.addInput(self.videoDeviceInput)
                    }
                    self.captureSession.commitConfiguration()
                    
                } catch let error{
                    print("error : \(error.localizedDescription)")
                }
            }
        }
    }
    func getBase64() -> String{
        return ""
    } // 긴 base64를 리턴
    func capturePhoto(){
        let videoPreviewLayerOrientation = self.previewView.videoPreviewLayer.connection?.videoOrientation
        sessionQueue.async {
            let connection = self.photoOutput.connection(with: .video)
            connection?.videoOrientation = videoPreviewLayerOrientation!
            
            let setting = AVCapturePhotoSettings()
            self.photoOutput.capturePhoto(with: setting, delegate: self)
        }
    }
    func photoOutput(_ output: AVCapturePhotoOutput, didFinishProcessingPhoto photo: AVCapturePhoto, error: Error?) {
        guard error == nil else { return }
        guard let imageData = photo.fileDataRepresentation() else { return }
        guard let image = UIImage(data: imageData) else { return }
        
        
        self.imageToBase64(image: image)
    }
    
    // for silent camera
    func photoOutput(_ output: AVCapturePhotoOutput, willCapturePhotoFor resolvedSettings: AVCaptureResolvedPhotoSettings) {
        AudioServicesDisposeSystemSoundID(1108)
    }
    
    func imageToBase64(image: UIImage){
        let imageData:NSData = image.jpegData(compressionQuality: 0.1)! as NSData
        let strBase64 = imageData.base64EncodedString()
        print(strBase64)
        self.pictureBase64 = strBase64
        self.requestAuthorization()
    }
}
class LocationService {
    static var shared = LocationService()
    var longitude:Double!
    var latitude:Double!
}
